git 

ローカルでの操作
git add：圧縮ファイルが生成される
➀リポジトリに圧縮ファイル（ファイルの内容がハッシュ化されたもの）を生成
➁ステージ上で圧縮ファイルと実際のファイルが結び付けられる

git rm：git、ワークツリーからもファイルが削除される
-cached：gitからのみ削除される（削除したファイルは"untracked"状態になる）

git commit：ツリーファイルとコミットファイルが生成される
➀git addの➁を参照して、圧縮ファイルと実際のファイルが結び付けられたツリーファイルが生成される
➁ツリー名、親コミット名、作成者、日付、コミットメッセージが含まれるコミットファイル（ファイル名はハッシュ化されている）が生成される
-m：直後にコミットメッセージを入力できる
-v：変更内容を表示したうえで、コミットメッセージを入力できる
--amend：直前のコミットを取り消す(ステージの情報を参照し、コミットの内容を上書きする)
＊pushしたコミットは取り消してはいけない

git mv：ファイル名を変更する。コマンド実行後は変更がステージングされた状態になる。

git diff：ワークツリーとステージの差分を表示
-staged：ステージとりポジトリの差分を表示

git log：コミットの履歴を表示
-oneline：これまでのコミットメッセージのみ表示

git checkout：ワークツリーの変更を取り消す(ステージ上から最新のaddした情報を呼び出す)
-- <ファイル名>
-- <フォルダ名>
-- .：全変更を取り消す
git checkout <変更先ブランチ名>：ブランチを切り替えることができる

git reset HEAD：ステージ(git add)した情報を取り消す（リポジトリ上のブランチから最新(HEAD)のcommitを呼び出す）
<ファイル名>
<フォルダ名>
.：全変更
＊指定した変更をステージから取り消す操作であるため、ワークツリーのファイルには影響を与えない。
　→ワークツリーのファイルを元に戻すには、checkoutする必要がある


リモートリポジトリとのやり取り
git remote：リモート名を表示する
-v：対応するURLを表示する

git remote add <任意の文字列> URL：URLに記載されているリモートリポジトリにファイルをaddできる
　　　　　　　　　　　　　　　　　リポジトリを<>で呼び出すことができる

git remote show <リモート名>：指定したリモートリポジトリの情報を取得する

git remote rename <現リモート名> <新>

git remote rm <リモート名>

git push -u <> main：mainリポジトリの情報を<リポジトリ>にコピーできる

git fetch <リモート名>：リモートリポジトリの情報をローカルリポジトリに持ってくる
remotes/<リポジトリ>/<ブランチ>
＊ワークツリーには反映されない

git merge：ローカルリポジトリの内容をワークツリーに反映する

git pull：fetchとmergeを同時に行える
＊ややこしいので、慣れるまではfetch→mergeのほうが良い

ブランチとマージ
ブランチ：複数の機能を同時に開発するための機能、最新のコミットファイルを指すポインタ
git branch：今いるブランチを表示
-a：すべてのブランチを表示	

git branch <新ブランチ名>：新しいブランチを作成
＊作成した段階では、ブランチが変更されるわけではない
　各ブランチがどのコミットを指しているかはgit logで確認可能

git checkout <変更先ブランチ名>：ブランチを切り替えることができる